{"data":{"markdownRemark":{"html":"<p>One of the nice new features in SQL Server 2005 is the inclusion of an XML data type. Microsoft added the ability to use XQuery searches to pull values from this type. [code:c#]</p>\n<p>DECLARE @filterData xml;</p>\n<p>DECLARE @PersonID int;</p>\n<p>SET @filterData = '';</p>\n<p>SET @PersonID = @filterData.value('(/XMLDATA/REC/@PersonID)[1]','int');</p>\n<p>--This will show the XQuery value in the PersonID</p>\n<p>PRINT @PersonID</p>\n<p>[/code]></p>\n<p>One of the problems I am seeing with developers using this code is that because Transact SQL is case insensitive, they forget that XQuery is not case insensive. The following example will return a NULL value</p>\n<p>[code:c#]</p>\n<p>DECLARE @filterData xml;</p>\n<p>DECLARE @PersonID int;</p>\n<p>SET @filterData = '';</p>\n<p>SET @PersonID = @filterData.value('(/XMLDATA/REC/@PersonID)[1]','int');</p>\n<p>--This will show the XQuery value in the PersonID</p>\n<p>SELECT @PersonID AS PersonID</p>\n<p>[/code]></p>\n<p>Make sure you use the proper casing when using XQuery in your Transact SQL.</p>","frontmatter":{"title":"T-SQL is case insensitive, XQuery is Case Sensitive","date":"17.01.2011","category":"Blog"},"timeToRead":1}},"pageContext":{"slug":"/t-sql-is-case-insensitive-x-query-is-case-sensitive","prev":{"fields":{"slug":"/tampa-bay-macromedia-cold-fusion-user-group-has-been-reformed"},"frontmatter":{"title":"Tampa Bay Macromedia/ColdFusion User Group Has Been Reformed","category":"Blog"}},"next":{"fields":{"slug":"/truncate-only-option-is-being-deprecated-in-sql-server-2007"},"frontmatter":{"title":"TRUNCATE_ONLY option is being deprecated in SQL Server 2007","category":"Blog"}}}}
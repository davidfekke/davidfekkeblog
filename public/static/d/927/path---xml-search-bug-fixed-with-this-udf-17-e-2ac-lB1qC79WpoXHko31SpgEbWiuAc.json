{"data":{"markdownRemark":{"html":"<p>I got tired of waiting for Macromedia to fix the bug in XMLSearch, so I wrote this User Defined Function that will bypass the problem with xpath searching when the xmlns attribute is set in the XMLDoc.</p>\n<p>The code below uses a regular expression to strip the xmlns attribute out of the XMLDoc before performing the xpath search. </p>\n<div class=\"code\"><font color=\"MAROON\"><cffunction name=<font color=\"BLUE\">\"fixedXMLSearchOld\"</font> access=<font color=\"BLUE\">\"public\"</font> returntype=<font color=\"BLUE\">\"array\"</font>></font>  \n <font color=\"MAROON\"><cfargument name=<font color=\"BLUE\">\"XMLString\"</font> type=<font color=\"BLUE\">\"Any\"</font> /></font>  \n <font color=\"MAROON\"><cfargument name=<font color=\"BLUE\">\"xPathString\"</font> type=<font color=\"BLUE\">\"string\"</font> /></font>  \n <font color=\"MAROON\"><cfset var myRegEx = 'xmlns[ ]*=[ ]*<font color=\"BLUE\">\"[[:graph:]]+\"</font>' /></font>  \n <font color=\"MAROON\"><cfset var currentXMLString = <font color=\"BLUE\">\"\"</font> /></font>  \n <font color=\"MAROON\"><cfset var currentXMLDoc = xmlNew() /></font>  \n <font color=\"MAROON\"><cfset var myArray = arrayNew(<font color=\"BLUE\">1</font>) /></font>  \n <font color=\"MAROON\"><cfif isXMLDoc(arguments.XMLString)></font>  \n <font color=\"MAROON\"><cfset currentXMLString = rereplaceNoCase(toString(arguments.XMLString),myRegEx,<font color=\"BLUE\">\"\"</font>,<font color=\"BLUE\">\"all\"</font>) /></font>  \n <font color=\"MAROON\"><cfelse></font>   \n <font color=\"MAROON\"><cfset currentXMLString = rereplaceNoCase(arguments.XMLString,myRegEx,<font color=\"BLUE\">\"\"</font>,<font color=\"BLUE\">\"all\"</font>) /></font>  \n <font color=\"MAROON\"></cfif></font>  \n <font color=\"MAROON\"><cfset currentXMLDoc = XMLParse(currentXMLString) /></font>  \n <font color=\"MAROON\"><cfset myArray = XMLSearch(currentXMLDoc,xPathString) /></font>  \n <font color=\"MAROON\"><cfreturn myArray /></font>  \n <font color=\"MAROON\"></cffunction></font></div>\nI also wrote a version in cfscript.\n<div class=\"code\"><font color=\"MAROON\"><cfscript></font>  \n function fixedXMLSearch(XMLString, xPathString) {  \n var myRegEx = 'xmlns[ ]*=[ ]*<font color=\"BLUE\">\"[[:graph:]]+\"</font>';  \n var currentXMLString = <font color=\"BLUE\">\"\"</font>;  \n var currentXMLDoc = xmlNew();  \n var myArray = arrayNew(<font color=\"BLUE\">1</font>);  \n if (isXMLDoc(arguments.XMLString)) {  \n currentXMLString = rereplaceNoCase(toString(arguments.XMLString),myRegEx,<font color=\"BLUE\">\"\"</font>,<font color=\"BLUE\">\"all\"</font>);  \n } else {  \n currentXMLString = rereplaceNoCase(arguments.XMLString,myRegEx,<font color=\"BLUE\">\"\"</font>,<font color=\"BLUE\">\"all\"</font>);  \n }  \n currentXMLDoc = XMLParse(currentXMLString);  \n myArray = XMLSearch(currentXMLDoc,xPathString);  \n return myArray;  \n }  \n <font color=\"MAROON\"></cfscript></font></div>","frontmatter":{"title":"XMLSearch bug fixed with this UDF","date":"17.01.2011","category":"Blog"},"timeToRead":1}},"pageContext":{"slug":"/xml-search-bug-fixed-with-this-udf","prev":{"fields":{"slug":"/xml-search-is-not-broken"},"frontmatter":{"title":"XMLSearch is not broken","category":"Blog"}},"next":{"fields":{"slug":"/xml-search-comments-added-to-livedocs"},"frontmatter":{"title":"XMLSearch() comments added to Livedocs","category":"Blog"}}}}
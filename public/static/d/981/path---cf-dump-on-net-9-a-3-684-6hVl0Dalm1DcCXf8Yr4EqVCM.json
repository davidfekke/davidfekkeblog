{"data":{"markdownRemark":{"html":"<p>I have been developing almost exclusively in C# .net for about a year now. In that time, I have wished for some of the language functionality in ColdFusion to find its way into C#. I have been using Visual Studio 2008 since it came out, and I found a project that is used to test Linq called ObjectDumper. It compiles a class called ObjectDumper that can be used for dumping the value of just about any object into a command line. Here is some sample syntax; <a href=\"\">code:c#</a>></p>\n<div class=\"gatsby-highlight\" data-language=\"c#\">\n      <pre class=\"language-c#\"><code class=\"language-c#\">using System; using System.Collections.Generic;  \nusing System.Linq;   \nusing System.Text; \n\n\nnamespace DumperTest { [\n\nclass Program \n{ \n\tstatic void Main(string[] args) \n\t{ \n\t\tvar myObject = new[]  \n\t\t{ \n\t\t\tnew { Name = &quot;Chris Smith&quot;, \n\t\t\tPhoneNumbers = new[] { &quot;206-555-0101&quot;, &quot;425-882-8080&quot; } \n\t\t\t}, \n\t\t\t\tnew { Name = &quot;Bob Harris&quot;, \n\t\t\t\tPhoneNumbers = new[] { &quot;650-555-0199&quot; } \n\t\t\t}\t \n\t\t}; \n\t\tvar myPets = new[] \n\t\t{ \n\t\t\tnew { name = &quot;Spike&quot;, number=9 }, \n\t\t\tnew { name = &quot;Snoopy&quot;, number=7 } \n\t\t}; \n\t\t\tObjectDumper.Write(myObject); \n\t\t\tObjectDumper.Write(myPets); \n\t\t} \n\t} \n} </code></pre>\n      </div>","frontmatter":{"title":"CFDump on .NET","date":"17.01.2011","category":"Blog"},"timeToRead":1}},"pageContext":{"slug":"/cf-dump-on-net","prev":{"fields":{"slug":"/cnbc-reporting-on-apple-i-phone"},"frontmatter":{"title":"CNBC reporting on Apple iPhone","category":"Blog"}},"next":{"fields":{"slug":"/cf-cs-ease-adoption-of-c"},"frontmatter":{"title":"CFCs ease adoption of C#","category":"Blog"}}}}